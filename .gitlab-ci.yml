stages:
  - buildServer
  - publish
  - publish-ecr

workflow:
  rules:
    - if: $CI_COMMIT_TAG

default:
  tags:
    - docker_image
  image: dckregistry.exacaster.com:5000/docker/exagit-runner-artifactory:latest

variables:
    ECR: 'true'
    CDP_TRIGGER: 'false'

include:
  - https://exagit.exacaster.com/exacaster/ci-commons/-/raw/master/.cdp-publish-ecr.yml


buildServer:
  stage: buildServer
  image: dckregistry.exacaster.com:5000/docker/java/11-jre-slim:master
  script: |
    export TAG=${CI_COMMIT_TAG}
    export SERVER_IMAGE="${CI_REGISTRY_IMAGE}/server"
    cd server/
    ./gradlew dockerBuild -PIMAGE=${SERVER_IMAGE} -PTAG=${TAG}
    ./gradlew dockerPush -PIMAGE=${SERVER_IMAGE} -PTAG=${TAG}


publishInternal:
  interruptible: true
  stage: publish
  script: |
    export TAG=${CI_COMMIT_TAG}
    export SERVER_IMAGE="${CI_REGISTRY_IMAGE}/server"
    docker build . -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG} --network host --build-arg SERVER_IMAGE=${SERVER_IMAGE} --build-arg SERVER_TAG=${TAG}
    docker push $CI_REGISTRY_IMAGE:${TAG}
    docker rmi $CI_REGISTRY_IMAGE:${TAG}

publish-ecr:
  variables:
    AWS_ACCESS_KEY_ID: $ECR_SCARABS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $ECR_SCARABS_ACCESS_KEY
    AWS_DEFAULT_REGION: $ECR_SCARABS_DEFAULT_REGION
    TAG: ${CI_COMMIT_TAG}
  needs:
    - publishInternal
