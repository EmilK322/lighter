plugins {
    id 'java'
    id 'groovy'
    id 'io.micronaut.application' version '1.4.2'
}

group 'org.exacaster.lighter'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

micronaut {
    version = "2.5.4"
    runtime "netty"
}
mainClassName = 'com.exacaster.lighter.Application'


dependencies {
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut.openapi:micronaut-openapi"
    annotationProcessor "io.soabase.record-builder:record-builder-processor:1.19"

    compileOnly 'io.soabase.record-builder:record-builder-core:1.19'

    implementation "io.micronaut:micronaut-validation"
    implementation "io.swagger.core.v3:swagger-annotations"

    implementation 'org.apache.spark:spark-launcher_2.12:3.1.1'
    implementation 'io.fabric8:kubernetes-client:5.4.0'

    runtimeOnly "io.micronaut.micrometer:micronaut-micrometer-core"
    runtimeOnly "io.micronaut.micrometer:micronaut-micrometer-registry-prometheus"
    runtimeOnly "io.micronaut:micronaut-management"

    runtimeOnly 'ch.qos.logback:logback-classic:1.3.0-alpha5'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation 'io.micronaut:micronaut-inject-groovy'
    testImplementation 'io.micronaut.test:micronaut-test-spock'
}

dockerfile {
    baseImage = "dckregistry.exacaster.com:5000/docker/java/16-jre-alpine:master"
}

dockerBuild {
    images = ["${getImage()}:${getTag()}"]
}

def getTag() {
    return findProperty('TAG') ?: 'latest'
}

def getImage() {
    return findProperty('IMAGE') ?: 'exacaster/lighter-server'
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=swagger-ui.enabled=true,swagger-ui.theme=flattop'
}

test {
    useJUnitPlatform()
}