plugins {
    id "java"
    id "groovy"
    id "io.micronaut.application" version "1.5.0"
}

group "org.exacaster.lighter"
version "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

micronaut {
    version = "2.5.5"
    runtime "netty"
}
mainClassName = "com.exacaster.lighter.Application"

dependencies {
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut.openapi:micronaut-openapi"

    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut.flyway:micronaut-flyway"
    implementation "io.swagger.core.v3:swagger-annotations"

    implementation 'org.apache.spark:spark-launcher_2.12:3.0.2'
    implementation 'io.fabric8:kubernetes-client:5.4.0'

    runtimeOnly "io.micronaut.micrometer:micronaut-micrometer-core"
    runtimeOnly "io.micronaut.micrometer:micronaut-micrometer-registry-prometheus"
    runtimeOnly "io.micronaut:micronaut-management"

    implementation "io.micronaut.sql:micronaut-jdbc-hikari"
    implementation "io.micronaut.sql:micronaut-jdbi"
    implementation "io.micronaut.data:micronaut-data-processor"

    runtimeOnly "com.h2database:h2"
    runtimeOnly "org.postgresql:postgresql"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.1"
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "io.micronaut.test:micronaut-test-spock"
    testImplementation "io.micronaut:micronaut-http-client"
}

dockerfile {
    baseImage = "dckregistry.exacaster.com:5000/docker/java/11-jre-slim:master"
}

dockerBuild {
    images = ["${getImage()}:${getTag()}"]
}

def getTag() {
    return findProperty('TAG') ?: 'latest'
}

def getImage() {
    return findProperty('IMAGE') ?: 'exacaster/lighter-server'
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=swagger-ui.enabled=true,swagger-ui.theme=flattop'
}

test {
    useJUnitPlatform()
}